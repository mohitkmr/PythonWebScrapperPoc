/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Documents;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-10-29T02:24:33.854Z[GMT]")
@Api(value = "documents", description = "the documents API")
public interface DocumentsApi {

    @ApiOperation(value = "List documents", nickname = "getAllDocuments", notes = "Lists all documents.", response = Documents.class, responseContainer = "List", tags={ "Documents", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "An object with a results property that contains an array of up to limit document objects.", response = Documents.class, responseContainer = "List") })
    @RequestMapping(value = "/documents",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Documents>> getAllDocuments();


    @ApiOperation(value = "Retrieve a document", nickname = "getDocumentById", notes = "Retrieves the document with the supplied ID.", response = Documents.class, tags={ "Documents", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns a document object if a valid identifier was provided.", response = Documents.class) })
    @RequestMapping(value = "/documents/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Documents> getDocumentById(@ApiParam(value = "The identifier of the document to be retrieved.",required=true) @PathVariable("id") String id
);

}

