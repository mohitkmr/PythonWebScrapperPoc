/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ReputationDetails;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-26T10:30:08.165Z[GMT]")
@Api(value = "reputations", description = "the reputations API")
public interface ReputationsApi {

    @ApiOperation(value = "List reputations", nickname = "getAllReputations", notes = "Lists all reputation objects which are registered in Linkage.", response = ReputationDetails.class, responseContainer = "List", tags={ "Reputations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = ReputationDetails.class, responseContainer = "List") })
    @RequestMapping(value = "/reputations",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<ReputationDetails>> getAllReputations();


    @ApiOperation(value = "Retrieve a reputation", nickname = "getReputationById", notes = "Retrieves a reputation object with the supplied ID.", response = ReputationDetails.class, tags={ "Reputations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = ReputationDetails.class) })
    @RequestMapping(value = "/reputations/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ReputationDetails> getReputationById(@ApiParam(value = "User ID",required=true) @PathVariable("id") String id
);

}

