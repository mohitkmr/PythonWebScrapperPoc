/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Body2;
import io.swagger.model.InlineResponse2001;
import io.swagger.model.Webhook;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-10-29T02:24:33.854Z[GMT]")
@Api(value = "webhooks", description = "the webhooks API")
public interface WebhooksApi {

    @ApiOperation(value = "Delete a webhook", nickname = "deleteWebhookById", notes = "Removes a webhook and unsubscribes your system from the events in the deleted webhook.", tags={ "Webhooks Guide", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "An empty response body.") })
    @RequestMapping(value = "/webhooks/{id}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteWebhookById(@ApiParam(value = "ID of the account to be deleted.",required=true) @PathVariable("id") String id
);


    @ApiOperation(value = "List webhooks", nickname = "getAllWebhooks", notes = "List webhooks", response = Webhook.class, responseContainer = "List", tags={ "Webhooks Guide", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "An object with a results property that contains an array of up to limit webhook objects.", response = Webhook.class, responseContainer = "List") })
    @RequestMapping(value = "/webhooks",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Webhook>> getAllWebhooks(@ApiParam(value = "The number of user objects to be returned. The default is 10.") @Valid @RequestParam(value = "limit", required = false) Integer limit
,@ApiParam(value = "The number of user objects to skip. Use this argument for pagination. The default is 0.") @Valid @RequestParam(value = "offset", required = false) Integer offset
);


    @ApiOperation(value = "Retrieve a webhook", nickname = "getWebhookById", notes = "Retrieves a webhook object with the supplied ID.", response = Webhook.class, tags={ "Webhooks Guide", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns a webhook object if a valid identifier was provided.", response = Webhook.class) })
    @RequestMapping(value = "/webhooks/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Webhook> getWebhookById(@ApiParam(value = "Identifier of the webhook object to be retrieved.",required=true) @PathVariable("id") String id
);


    @ApiOperation(value = "Creates a new webhook.", nickname = "registerWebhooks", notes = "Create a webhook for the events.", response = InlineResponse2001.class, tags={ "Webhooks Guide", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The user token enclosed in a json object: {\"access\": \"user-token\"}.", response = InlineResponse2001.class) })
    @RequestMapping(value = "/webhooks",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InlineResponse2001> registerWebhooks(@ApiParam(value = ""  )  @Valid @RequestBody Body2 body
);

}

